apiVersion: batch/v1
kind: Job
metadata:
  name: lacework-agent-testjob
  namespace: lacework
spec:
  backoffLimit: 1
  template:
    spec:
      containers:
        - name: job
          image: 'alpine/k8s:1.26.2'
          imagePullPolicy: Always
          command:
            - /bin/bash
          args:
            - '-c'
            - >-
              kubectl wait pods -n lacework -l name=lacework-agent --for condition=Ready --timeout=90s;
              output=$(kubectl logs -n lacework -l name=lacework-agent);
              if grep "stats.go" <<< "$output"; then exit 0; else exit 1; fi; # Check if stats.go is actively collecting
      restartPolicy: Never
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: lacework-agent-access-token-secret-reader
  namespace: lacework
rules:
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "watch", "list"]
  - apiGroups: [ "" ]
    resources: [ "pods/log" ]
    verbs: [ "get", "watch", "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-lacework-agent-access-token
  namespace: lacework
subjects:
  - kind: User
    name: system:serviceaccount:lacework:default
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: lacework-agent-access-token-secret-reader
  apiGroup: rbac.authorization.k8s.io