---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-unseal-sa
  namespace: vault

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vault-unseal-role
  namespace: vault
rules:
  - apiGroups: [""]
    resources: 
      - "pods"
      - "pods/log"
    verbs: 
      - "get"
      - "list"
      - "watch"
  - apiGroups: [""]
    resources: 
      - "pods/exec"
    verbs: 
      - "create"
  - apiGroups: [""]
    resources:
        - "secrets"
    verbs:
        - "*"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vault-unseal-rb
  namespace: vault
subjects:
  - kind: ServiceAccount
    name: vault-unseal-sa
roleRef:
  kind: Role
  name: vault-unseal-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Pod
metadata:
  name: vault-unseal
  namespace: vault
spec:
  serviceAccountName: vault-unseal-sa
  containers:
    - name: vault-unseal
      image: 'bitnami/kubectl:latest'
      command:
        - /bin/sh
      args:
        - '-c'
        - >-
          vault_running=`kubectl get pods -n vault vault-0 -o jsonpath="{.status.phase}"`;
          while [ "$vault_running" != "Running" ]; do echo waiting; sleep 10; done; sleep 10;
          kubectl exec -ti vault-0 -- vault operator init -key-shares=1 -key-threshold=1 -format=json > /tmp/unseal.json;
          vault_unseal=`cat /tmp/unseal.json | jq -r '.unseal_keys_hex[0]'`;
          kubectl exec -ti vault-0 -- vault operator unseal $vault_unseal;
          kubectl create secret generic vault-unseal-token --from-file='/tmp/unseal.json';
          sleep 10;